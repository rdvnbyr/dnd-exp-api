{
  "openapi": "3.0.3",
  "info": {
    "title": "DnD API",
    "description": "",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "tags": [
    {
      "name": "UserController",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/users/register": {
      "post": {
        "tags": ["UserController"],
        "summary": "Create user",
        "description": "Creating a new user in the system with the given data in the request body.",
        "operationId": "createUser",
        "requestBody": {
          "description": "Created user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "apiteam@swagger.io",
                "password": "password",
                "role": "user",
                "licence": "free",
                "avatar": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "tags": ["UserController"],
        "summary": "Logs user into the system",
        "description": "Logging in a user with the given email and password.",
        "operationId": "loginUser",
        "requestBody": {
          "description": "Login user object with email and password",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              },
              "example": {
                "email": "apiteam@swagger.io",
                "password": "password"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "tags": ["UserController"],
        "summary": "Logs out current logged in user session",
        "description": "",
        "operationId": "logoutUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": "successful operation and logged out"
          },
          "401": {
            "description": "Unauthorized access or invalid token"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "patch": {
        "tags": ["UserController"],
        "summary": "Update user information",
        "description": "This can only be done by the logged in user.",
        "operationId": "updateUser",
        "parameters": [],
        "requestBody": {
          "description": "Updated user object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "401": {
            "description": "Unauthorized access or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["UserController"],
        "summary": "Delete user",
        "description": "This can only be done by the logged in user.",
        "operationId": "deleteUser",
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "401": {
            "description": "Unauthorized access or invalid token"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/workspaces": {
      "post": {
        "tags": ["WorkspaceController"],
        "summary": "Create workspace",
        "description": "Creating a new workspace in the system with the given data in the request body.",
        "operationId": "createWorkspace",
        "requestBody": {
          "description": "Created workspace object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Workspace"
              },
              "example": {
                "name": "Workspace 1",
                "description": "Workspace 1 description",
                "type": "personal",
                "boards": [],
                "owner": "xxx_user_id_xxx"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Workspace"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com",
            "description": "Email address of the user"
          },
          "password": {
            "type": "string",
            "example": "Password123",
            "description": "Password of the user"
          },
          "role": {
            "type": "string",
            "description": "User Role",
            "example": "user"
          },
          "licence": {
            "type": "string",
            "description": "User Licence Type (free, trial, premium, enterprise)",
            "example": "free"
          },
          "avatar": {
            "type": "string",
            "description": "User Avatar",
            "example": "http://www.gravatar.com/avatar/205e460b479e2e5b48aec07710c08d50"
          }
        }
      },
      "Workspace": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "The Workspace"
          },
          "description": {
            "type": "string",
            "example": "The Workspace Description"
          },
          "owner": {
            "type": "string",
            "example": "theUser_id",
            "description": "The user id of the owner of the workspace"
          },
          "boards": {
            "type": "array",
            "items": {
              "type": "string",
              "example": "board_id"
            }
          },
          "type": {
            "type": "string",
            "example": "personal",
            "description": "The type of the workspace (personal, team, enterprise)"
          }
        }
      },
      "Tag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "ObjectId"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "xml": {
          "name": "##default"
        }
      }
    },
    "requestBodies": {
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "in": "header"
      }
    }
  }
}
